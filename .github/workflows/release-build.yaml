# .github/workflows/release-build.yml
name: Build & Upload Release Assets

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python: [3.12]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller pyautogui

      - name: Build AutoTyper
        id: build
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            # Build macOS .app
            pyinstaller --windowed --name "AutoTyper" --icon icon.icns writer.py
            # Zip only the .app bundle inside dist/
            cd dist
            zip -r AutoTyper-macOS.zip AutoTyper.app
            cd ..
            echo "artifact_path=dist/AutoTyper-macOS.zip"  >> $GITHUB_OUTPUT
            echo "artifact_name=AutoTyper-macOS.zip"       >> $GITHUB_OUTPUT
          else
            # Build Windows .exe
            pyinstaller --windowed --onefile --name "AutoTyper" --icon icon.icns writer.py
            echo "artifact_path=dist/AutoTyper.exe"        >> $GITHUB_OUTPUT
            echo "artifact_name=AutoTyper-Windows.exe"    >> $GITHUB_OUTPUT
          fi

      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url:    ${{ github.event.release.upload_url }}
          asset_path:    ${{ steps.build.outputs.artifact_path }}
          asset_name:    ${{ steps.build.outputs.artifact_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
