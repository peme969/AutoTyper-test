name: Build & Upload Release Assets

on:
  release:
    # run on both new (“created”) and finalized (“published”) releases
    types: [created, published]

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python: [3.12]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller pyautogui

      - name: Build AutoTyper
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            pyinstaller --windowed --name "AutoTyper" --icon icon.icns writer.py
            echo "dist/AutoTyper.app" > artifact-path.txt
            echo "AutoTyper-macOS.app"   > artifact-name.txt
          else
            pyinstaller --windowed --onefile --name "AutoTyper" --icon icon.icns writer.py
            echo "dist/AutoTyper.exe"    > artifact-path.txt
            echo "AutoTyper-Windows.exe" > artifact-name.txt
          fi

      - name: Upload to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path:  ${{ steps.build.outputs.artifact-path }}
          asset_name:  ${{ steps.build.outputs.artifact-name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
